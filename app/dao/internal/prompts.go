// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// PromptsDao is the data access object for table forum_prompts.
type PromptsDao struct {
	table   string         // table is the underlying table name of the DAO.
	group   string         // group is the database configuration group name of current DAO.
	columns PromptsColumns // columns contains all the column names of Table for convenient usage.
}

// PromptsColumns defines and stores column names for table forum_prompts.
type PromptsColumns struct {
	Id          string //
	Position    string // 提示语位置
	Content     string // 提示语内容
	Description string // 简介
	IsDisabled  string // 状态：0 正常 1禁用
	CreatedAt   string // 创建时间
	UpdateAt    string // 更新时间
}

//  PromptsColumns holds the columns for table forum_prompts.
var promptsColumns = PromptsColumns{
	Id:          "id",
	Position:    "position",
	Content:     "content",
	Description: "description",
	IsDisabled:  "is_disabled",
	CreatedAt:   "created_at",
	UpdateAt:    "update_at",
}

// NewPromptsDao creates and returns a new DAO object for table data access.
func NewPromptsDao() *PromptsDao {
	return &PromptsDao{
		group:   "default",
		table:   "forum_prompts",
		columns: promptsColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *PromptsDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *PromptsDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *PromptsDao) Columns() PromptsColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *PromptsDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *PromptsDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *PromptsDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
