// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// EmailRecordsDao is the data access object for table forum_email_records.
type EmailRecordsDao struct {
	table   string              // table is the underlying table name of the DAO.
	group   string              // group is the database configuration group name of current DAO.
	columns EmailRecordsColumns // columns contains all the column names of Table for convenient usage.
}

// EmailRecordsColumns defines and stores column names for table forum_email_records.
type EmailRecordsColumns struct {
	Id        string //
	UserId    string // 用户id
	Username  string // 用户名
	Type      string // 类型
	Email     string // 邮箱
	Title     string // 标题
	Content   string // 内容
	Error     string // 错误信息
	CreatedAt string // 创建时间
	UpdateAt  string // 更新时间
}

//  EmailRecordsColumns holds the columns for table forum_email_records.
var emailRecordsColumns = EmailRecordsColumns{
	Id:        "id",
	UserId:    "user_id",
	Username:  "username",
	Type:      "type",
	Email:     "email",
	Title:     "title",
	Content:   "content",
	Error:     "error",
	CreatedAt: "created_at",
	UpdateAt:  "update_at",
}

// NewEmailRecordsDao creates and returns a new DAO object for table data access.
func NewEmailRecordsDao() *EmailRecordsDao {
	return &EmailRecordsDao{
		group:   "default",
		table:   "forum_email_records",
		columns: emailRecordsColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *EmailRecordsDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *EmailRecordsDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *EmailRecordsDao) Columns() EmailRecordsColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *EmailRecordsDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *EmailRecordsDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *EmailRecordsDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
