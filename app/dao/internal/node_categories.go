// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// NodeCategoriesDao is the data access object for table forum_node_categories.
type NodeCategoriesDao struct {
	table   string                // table is the underlying table name of the DAO.
	group   string                // group is the database configuration group name of current DAO.
	columns NodeCategoriesColumns // columns contains all the column names of Table for convenient usage.
}

// NodeCategoriesColumns defines and stores column names for table forum_node_categories.
type NodeCategoriesColumns struct {
	Id                string //
	Name              string // 分类名称
	ParentId          string // 父节点id
	IsIndexNavigation string // 是否首页导航显示
	Sort              string // 显示顺序越小越靠前
	CreatedAt         string // 创建时间
	DeletedAt         string // 删除时间
}

//  NodeCategoriesColumns holds the columns for table forum_node_categories.
var nodeCategoriesColumns = NodeCategoriesColumns{
	Id:                "id",
	Name:              "name",
	ParentId:          "parent_id",
	IsIndexNavigation: "is_index_navigation",
	Sort:              "sort",
	CreatedAt:         "created_at",
	DeletedAt:         "deleted_at",
}

// NewNodeCategoriesDao creates and returns a new DAO object for table data access.
func NewNodeCategoriesDao() *NodeCategoriesDao {
	return &NodeCategoriesDao{
		group:   "default",
		table:   "forum_node_categories",
		columns: nodeCategoriesColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *NodeCategoriesDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *NodeCategoriesDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *NodeCategoriesDao) Columns() NodeCategoriesColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *NodeCategoriesDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *NodeCategoriesDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *NodeCategoriesDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
