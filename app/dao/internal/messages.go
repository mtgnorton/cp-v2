// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// MessagesDao is the data access object for table forum_messages.
type MessagesDao struct {
	table   string          // table is the underlying table name of the DAO.
	group   string          // group is the database configuration group name of current DAO.
	columns MessagesColumns // columns contains all the column names of Table for convenient usage.
}

// MessagesColumns defines and stores column names for table forum_messages.
type MessagesColumns struct {
	Id              string //
	UserId          string // 用户id
	Username        string // 用户名
	RepliedUserId   string // 被回复用户id,用户a向用户b回复，用户b为 被回复用户id
	RepliedUsername string // 被回复用户名
	PostId          string // 关联主题id
	ReplyId         string // 关联回复id
	Type            string // 消息类型
	IsRead          string // 是否已读，否: 0,是: 1
	CreatedAt       string // 创建时间
	DeletedAt       string // 删除时间
}

//  MessagesColumns holds the columns for table forum_messages.
var messagesColumns = MessagesColumns{
	Id:              "id",
	UserId:          "user_id",
	Username:        "username",
	RepliedUserId:   "replied_user_id",
	RepliedUsername: "replied_username",
	PostId:          "post_id",
	ReplyId:         "reply_id",
	Type:            "type",
	IsRead:          "is_read",
	CreatedAt:       "created_at",
	DeletedAt:       "deleted_at",
}

// NewMessagesDao creates and returns a new DAO object for table data access.
func NewMessagesDao() *MessagesDao {
	return &MessagesDao{
		group:   "default",
		table:   "forum_messages",
		columns: messagesColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *MessagesDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *MessagesDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *MessagesDao) Columns() MessagesColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *MessagesDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *MessagesDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *MessagesDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
